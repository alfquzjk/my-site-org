* xkeysnail for emacs-like key
一位日本开发者开发了一个能够将 [[https://www.gnu.org/software/emacs/][emacs ]] 的键位习惯应用于整个系统的程序[[https://github.com/mooz/xkeysnail][ xkeysnail]] ，用 ~Python~ 开发。
例如 ~emacs~ 中控制光标移动的键 ~C+n, C+p, C+f, C+b~ 等等都可以很好地运用 ~emacs-like~ 快捷键于其他程序的文本输入， 修改。
甚至可以做得更多，通过它的配置文件 ~config.py~  自定义某个程序的快捷键。

** Install xkeysnail
使用[[https://github.com/actionless/pikaur][ pikaur]] 进行安装。
#+begin_src shell
    pikaur -S xkeysnail
#+end_src 
** 配置xkeysnail自启动
由于 ~xkeysnail~ 需要获取键盘活动必须以 ~root~ 权限监听并映射，所以有两种方式来自启动 ~xkeysnail~ ，
第一种方式是编写一个 ~xkeysnail.service~ 配置，让[[https://systemd.io/][ systemd ]]将 ~xkeysnail~ 作为守护进程启动，但不推荐。
这里我选择第二种方式。
*** 创建一个新的用户组 uinput
#+begin_src shell
    sudo groupadd -f uinput
    sudo gpasswd -a $USER uinput
#+end_src 
*** 通过 udev 创建新的访问授予权限
#+begin_src shell
    cat <<EOF | sudo tee /etc/udev/rules.d/70-xkeysnail.rules
    KERNEL=="uinput", GROUP="uinput", MODE="0660", OPTIONS+="static_node=uinput"
    KERNEL=="event[0-9]*", GROUP="uinput", MODE="0660"
    EOF
#+end_src 
*** 编写脚本开机自启动 xkeysnail
由于我使用的是[[http://dwm.suckless.org/][ dwm ]]窗口管理器，并且使用[[http://dwm.suckless.org/patches/autostart/][ autostart ]]这个补丁专门来管理用户空间的自启动程序。
编写 ~xkeynsail~ 的自启动脚本非常简单，只需要在 ~autostart.sh~ 脚本中添加一行 ~shell~ :
#+begin_src shell
    xkeysnail --quiet $HOME/.config/xkeysnail/config.py
#+end_src
*** 关于config.py的配置文件
~xkeysnail~ 的启动必须指定一个 ~config~ ，用来映射 ~X~ 系统的键盘事件，
~xkeysnail~ 上作者已经有一个完全可用的 ~emacs-like~ 配置，
如果你需要做一些特别的修改，可以编辑 ~config.py~ 这个文件。通常情况下，
~Linux~ 终端就是一个 ~emacs-like~ 键位的程序，我习惯于使用
 [[https://github.com/alacritty/alacritty][alacritty ]]作为我的终端模拟器，这时候为了避免冲突，需要将 ~alacritty~ 过滤掉，它的所有键盘活动不需要 ~xkeysnail~ 来映射。
#+begin_src python
    define_keymap(lambda wm_class: wm_class not in ("Emacs", "URxvt", \
	"Alacritty"),{...})
#+end_src
** 重启计算机

[[./index.org][<-- Back to Home]]
